using DataBridge.Models.Delivra;

namespace UnitTests;

/// <summary>
/// Tests for the <see cref="Open"/> class.
/// </summary>
public class OpenTests
{
    /// <summary>
    /// Tests the Equals method with the same primary key.
    /// </summary>
    [Fact]
    public void Equals_SamePkId_ReturnsTrue()
    {
        // Arrange
        var open1 = new Open { PkId = 1 };
        var open2 = new Open { PkId = 1 };

        // Act
        var result = open1.Equals(open2);

        // Assert
        Assert.True(result);
    }

    /// <summary>
    /// Tests the Equals method with different primary keys.
    /// </summary>
    [Fact]
    public void Equals_DifferentPkId_ReturnsFalse()
    {
        // Arrange
        var open1 = new Open { PkId = 1 };
        var open2 = new Open { PkId = 2 };

        // Act
        var result = open1.Equals(open2);

        // Assert
        Assert.False(result);
    }

    /// <summary>
    /// Tests the GetHashCode method with the same primary key.
    /// </summary>
    [Fact]
    public void GetHashCode_SamePkId_ReturnsSameHashCode()
    {
        // Arrange
        var open1 = new Open { PkId = 1 };
        var open2 = new Open { PkId = 1 };

        // Act
        var hashCode1 = open1.GetHashCode();
        var hashCode2 = open2.GetHashCode();

        // Assert
        Assert.Equal(hashCode1, hashCode2);
    }

    /// <summary>
    /// Tests the GetHashCode method with different primary keys.
    /// </summary>
    [Fact]
    public void GetHashCode_DifferentPkId_ReturnsDifferentHashCode()
    {
        // Arrange
        var open1 = new Open { PkId = 1 };
        var open2 = new Open { PkId = 2 };

        // Act
        var hashCode1 = open1.GetHashCode();
        var hashCode2 = open2.GetHashCode();

        // Assert
        Assert.NotEqual(hashCode1, hashCode2);
    }

    /// <summary>
    /// Tests the ToString method.
    /// </summary>
    [Fact]
    public void ToString_ReturnsExpectedString()
    {
        // Arrange
        var open = new Open
        {
            PkId = 1,
            EmailAddress = "test@domain.com",
            EventTime = new DateTime(2023, 1, 1),
            MailingID = 123,
            MemberID = 456,
            IPAddress = "127.0.0.1",
            ContactEngagement = 75.5,
            Platform = "Windows",
            PlatformVersion = "10",
            Browser = "Chrome",
            BrowserVersion = "90.0.4430.212",
            ReadingEnvironment = "Desktop"
        };

        // Act
        var result = open.ToString();

        // Assert
        const string expected =
            "PkId: 1, EmailAddress: test@domain.com, EventTime: 1/1/2023 12:00:00 AM, MailingID: 123, MemberID: 456, IPAddress: 127.0.0.1, ContactEngagement: 75.5, Platform: Windows, PlatformVersion: 10, Browser: Chrome, BrowserVersion: 90.0.4430.212, ReadingEnvironment: Desktop";
        Assert.Equal(expected, result);
    }
}