// <auto-generated />
using System;
using DataBridge.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBridge.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataBridge.Models.Contentserv.Product", b =>
                {
                    b.Property<int>("PdmarticleID")
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("Relational:JsonPropertyName", "PdmarticleID");

                    b.Property<string>("AdditionalCategories")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "AdditionalCategories");

                    b.Property<string>("ApplicatorType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ApplicatorType");

                    b.Property<string>("BackingType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BackingTypeFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "BackingType");

                    b.Property<string>("BaseUOM")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "BaseUOM");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Brand");

                    b.Property<decimal>("BrokenCaseStandardCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "BrokenCaseStandardCost");

                    b.Property<string>("CaliforniaProp65WarningIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CaliforniaProp65WarningIcon");

                    b.Property<string>("CaliforniaSalesRestrictionIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CaliforniaSalesRestrictionIcon");

                    b.Property<string>("CartridgeCapacity")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CartridgeCapacity");

                    b.Property<string>("ChemicalComposition")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ChemicalComposition");

                    b.Property<string>("Class4Description")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Class4Description");

                    b.Property<string>("Class5Description")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Class5Description");

                    b.Property<int?>("ClassId1")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ClassId1");

                    b.Property<int?>("ClassId2")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ClassId2");

                    b.Property<int?>("ClassId3")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ClassId3");

                    b.Property<int?>("ClassId4")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ClassId4");

                    b.Property<int?>("ClassId5")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ClassId5");

                    b.Property<string>("ClassMapping")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ClassMapping");

                    b.Property<string>("Classification")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Classification");

                    b.Property<string>("CloudStreamID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CloudStreamID");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Code");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Color");

                    b.Property<string>("ColorFilter")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ColorFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "ColorFilter");

                    b.Property<decimal>("ColumnPrice1")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "ColumnPrice1");

                    b.Property<decimal>("ColumnPrice2")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "ColumnPrice2");

                    b.Property<decimal>("ColumnPrice3")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "ColumnPrice3");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Company");

                    b.Property<string>("Components")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Components");

                    b.Property<string>("ConfirmCostCheckbox")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ConfirmCostCheckbox");

                    b.Property<string>("ConflictMinerals")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ConflictMinerals");

                    b.Property<string>("ContainerPackage")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ContainerPackage");

                    b.Property<string>("ContainerPackageId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ContainerPackageId");

                    b.Property<int?>("CopyOf")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "CopyOf");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CountryOfOrigin");

                    b.Property<string>("CureSystem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CureSystem");

                    b.Property<string>("CureSystem1")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CureSystem1");

                    b.Property<string>("CureSystem2")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CureSystem2");

                    b.Property<string>("CureSystem3")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CureSystem3");

                    b.Property<string>("CureTime")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "CureTime");

                    b.Property<DateTime?>("DateLastModified")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "DateLastModified");

                    b.Property<string>("DescriptiveSize")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DescriptiveSize");

                    b.Property<string>("DielectricStrength")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DielectricStrength");

                    b.Property<int?>("Dimension1")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Dimension1");

                    b.Property<int?>("Dimension2")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Dimension2");

                    b.Property<int?>("Dimension3")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Dimension3");

                    b.Property<int?>("Dimension4")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Dimension4");

                    b.Property<int?>("Dimension5")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Dimension5");

                    b.Property<int?>("Dimension6")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Dimension6");

                    b.Property<string>("DiscontinuedCheckbox")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DiscontinuedCheckbox");

                    b.Property<string>("DispensingValveType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DispensingValveType");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DisplayName");

                    b.Property<int?>("DisplayPricing")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "DisplayPricing");

                    b.Property<string>("DisplayPricingContentArea")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DisplayPricingContentArea");

                    b.Property<string>("DisplayPricingMessage")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DisplayPricingMessage");

                    b.Property<string>("DoNotFreeze")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DoNotFreeze");

                    b.Property<string>("DropShipRestriction")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DropShipRestriction");

                    b.Property<string>("DryIceIceBrixIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DryIceIceBrixIcon");

                    b.Property<string>("DryIceItem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "DryIceItem");

                    b.Property<string>("EPlusCheckbox")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "EPlusCheckbox");

                    b.Property<string>("Elements")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Elements");

                    b.Property<string>("EllsworthMarkets")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "EllsworthMarkets");

                    b.Property<string>("Elongation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Elongation");

                    b.Property<string>("Exclusivity")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Exclusivity");

                    b.Property<string>("ExternalKey")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ExternalKey");

                    b.Property<string>("FeedPower")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "FeedPower");

                    b.Property<string>("FlashPoint")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "FlashPoint");

                    b.Property<string>("ForceMajeure")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ForceMajeure");

                    b.Property<string>("FrozenItem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "FrozenItem");

                    b.Property<string>("GHSHazardIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GHSHazardIcon");

                    b.Property<string>("GapFilling")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GapFilling");

                    b.Property<string>("GoogleBundle")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GoogleBundle");

                    b.Property<string>("GoogleExcludedCountry")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GoogleExcludedCountry");

                    b.Property<string>("GoogleExcludedDestination")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GoogleExcludedDestination");

                    b.Property<string>("GoogleMultipack")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GoogleMultipack");

                    b.Property<string>("GooglePause")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GooglePause");

                    b.Property<string>("GoogleProductCategory")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GoogleProductCategory");

                    b.Property<string>("GoogleShipping")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GoogleShipping");

                    b.Property<string>("GoogleShopping")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "GoogleShopping");

                    b.Property<decimal>("GrossWeight")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "GrossWeight");

                    b.Property<string>("HTSClassification")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "HTSClassification");

                    b.Property<string>("Hardness")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Hardness");

                    b.Property<string>("HazardousItem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "HazardousItem");

                    b.Property<string>("HotMeltStickWidth")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HotMeltStickWidthFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "HotMeltStickWidth");

                    b.Property<string>("HotMeltType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "HotMeltType");

                    b.Property<string>("IMPCheckbox")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "IMPCheckbox");

                    b.Property<string>("IceBrixItem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "IceBrixItem");

                    b.Property<string>("ImpactResistance")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ImpactResistance");

                    b.Property<string>("InsideDiameter")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InsideDiameterFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "InsideDiameter");

                    b.Property<int?>("IsFolder")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "IsFolder");

                    b.Property<int?>("IsPublished")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "IsPublished");

                    b.Property<int?>("IsStocked")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "IsStocked");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ItemDescription");

                    b.Property<string>("ItemID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ItemID");

                    b.Property<string>("ItemImage")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ItemImage");

                    b.Property<string>("ItemLiterature")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ItemLiterature");

                    b.Property<string>("ItemVideo")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ItemVideo");

                    b.Property<string>("KeySpecifications")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "KeySpecifications");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Label");

                    b.Property<int?>("LanguageID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "LanguageID");

                    b.Property<int?>("LeadTimeDays")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "LeadTimeDays");

                    b.Property<string>("Length")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LengthFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "Length");

                    b.Property<string>("LimitedQtyItem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "LimitedQtyItem");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "LocationId");

                    b.Property<int?>("LocationMOQ")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "LocationMOQ");

                    b.Property<string>("LocationStockingStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "LocationStockingStatus");

                    b.Property<string>("LowVOCIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "LowVOCIcon");

                    b.Property<decimal>("MSRP")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "MSRP");

                    b.Property<string>("MadeInUSAIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "MadeInUSAIcon");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Manufacturer");

                    b.Property<string>("ManufacturerId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ManufacturerId");

                    b.Property<string>("ManufacturerPN")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ManufacturerPN");

                    b.Property<string>("MarketingDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "MarketingDescription");

                    b.Property<string>("MaxQuantity")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "MaxQuantity");

                    b.Property<string>("MinQuantity")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "MinQuantity");

                    b.Property<string>("Minus20FItem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Minus20FItem");

                    b.Property<string>("Minus40FItem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Minus40FItem");

                    b.Property<string>("MixRatio")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "MixRatio");

                    b.Property<string>("Multiple")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Multiple");

                    b.Property<string>("MustShipAirIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "MustShipAirIcon");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Name");

                    b.Property<string>("NameInURL")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "NameInURL");

                    b.Property<string>("NonReturnableCheckbox")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "NonReturnableCheckbox");

                    b.Property<int?>("ObjecttypeID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ObjecttypeID");

                    b.Property<int?>("ObjecttypetemplateID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ObjecttypetemplateID");

                    b.Property<string>("OriginCriterion")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "OriginCriterion");

                    b.Property<string>("Overview")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Overview");

                    b.Property<int?>("OwnerID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "OwnerID");

                    b.Property<int?>("P21SalesUnitPerPackage")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "P21SalesUnitPerPackage");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ParentID");

                    b.Property<int?>("PdmarticleconfigurationID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "PdmarticleconfigurationID");

                    b.Property<string>("PeelStrength")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "PeelStrength");

                    b.Property<string>("PolesorTips")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PolesorTipsFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "PolesorTips");

                    b.Property<string>("PrimaryCategory")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "PrimaryCategory");

                    b.Property<string>("ProductsPackagesAndBundles")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ProductsPackagesAndBundles");

                    b.Property<string>("Profile")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ProfileFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "Profile");

                    b.Property<int?>("Progress")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Progress");

                    b.Property<string>("PurchasingUOM")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "PurchasingUOM");

                    b.Property<string>("QuoteExpirationDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "QuoteExpirationDate");

                    b.Property<string>("RefItemID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "RefItemID");

                    b.Property<string>("RefrigeratedItem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "RefrigeratedItem");

                    b.Property<string>("RelatedEntries")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "RelatedEntries");

                    b.Property<string>("ReleaseAgentType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ReleaseAgentTypeFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "ReleaseAgentType");

                    b.Property<decimal>("ResellerPrice")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "ResellerPrice");

                    b.Property<int?>("RuleStatus")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "RuleStatus");

                    b.Property<string>("SDS")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SDS");

                    b.Property<string>("SDSDocumentNumbers")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SDSDocumentNumbers");

                    b.Property<string>("SDSDocumentTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SDSDocumentTitle");

                    b.Property<string>("SEOURL")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SEOURL");

                    b.Property<string>("SalesRestrictionIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SalesRestrictionIcon");

                    b.Property<string>("SalesUOM")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SalesUOM");

                    b.Property<string>("ServiceTemperature")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ServiceTemperature");

                    b.Property<string>("ShearStrength")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ShearStrength");

                    b.Property<string>("ShelfLifeData")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ShelfLifeData");

                    b.Property<string>("ShippingNote")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ShippingNote");

                    b.Property<string>("ShippingRestrictions")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ShippingRestrictions");

                    b.Property<int?>("ShipsAmbient")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ShipsAmbient");

                    b.Property<string>("Size1")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Size1");

                    b.Property<string>("Size2")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Size2");

                    b.Property<string>("Size3")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Size3");

                    b.Property<string>("SizeUnit1")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SizeUnit1");

                    b.Property<string>("SizeUnit2")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SizeUnit2");

                    b.Property<string>("SizeUnit3")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SizeUnit3");

                    b.Property<string>("SmartPreset")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SmartPreset");

                    b.Property<string>("SoldAs")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SoldAs");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SortOrder");

                    b.Property<string>("SpecialInformation")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SpecialInformation");

                    b.Property<string>("SpecificGravity")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SpecificGravity");

                    b.Property<string>("Spray")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SprayFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "Spray");

                    b.Property<decimal>("StandardCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "StandardCost");

                    b.Property<int?>("StateID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "StateID");

                    b.Property<string>("StateSalesRestrictionIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "StateSalesRestrictionIcon");

                    b.Property<string>("StaticBagWidth")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("StaticBagWidthFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "StaticBagWidth");

                    b.Property<string>("StockPerCheckbox")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "StockPerCheckbox");

                    b.Property<decimal>("SupplierCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "SupplierCost");

                    b.Property<string>("SupplierIDPrimary")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SupplierIDPrimary");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SupplierName");

                    b.Property<string>("SupplierNonStockCheckbox")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SupplierNonStockCheckbox");

                    b.Property<string>("SupplierPartNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SupplierPartNumber");

                    b.Property<string>("TDSDocumentNumbers")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TDSDocumentNumbers");

                    b.Property<string>("TDSDocumentTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TDSDocumentTitle");

                    b.Property<string>("Tack")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TackFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "Tack");

                    b.Property<string>("TackFreeTime")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TackFreeTime");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Tags");

                    b.Property<string>("TapeWidth")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TapeWidthFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "TapeWidth");

                    b.Property<string>("Tapered")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TaperedFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "Tapered");

                    b.Property<string>("TechnicalData")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TechnicalData");

                    b.Property<string>("TensileStrength")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TensileStrength");

                    b.Property<string>("ThermalConductivity")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ThermalConductivity");

                    b.Property<string>("TimeAndTempSensitiveIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TimeAndTempSensitiveIcon");

                    b.Property<string>("TipAngle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipAngleFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "TipAngle");

                    b.Property<string>("TipGauge")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipGaugeFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "TipGauge");

                    b.Property<string>("TipMaterial")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipMaterialFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "TipMaterial");

                    b.Property<string>("TiporCartridgeType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipOrCartridgeTypeFilter")
                        .HasAnnotation("Relational:JsonPropertyName", "TiporCartridgeType");

                    b.Property<string>("TreePath")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TreePath");

                    b.Property<string>("TreeSort")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TreeSort");

                    b.Property<string>("TypicalUse")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "TypicalUse");

                    b.Property<string>("UID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "UID");

                    b.Property<string>("UID_Company")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "UID_Company");

                    b.Property<string>("USSupplierInformationID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "USSupplierInformationID");

                    b.Property<string>("USSupplierInformationName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "USSupplierInformationName");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "ValidFrom");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "ValidTo");

                    b.Property<string>("VariableSizeItemCheckbox")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "VariableSizeItemCheckbox");

                    b.Property<string>("Viscosity")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Viscosity");

                    b.Property<string>("VolumeResistivity")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "VolumeResistivity");

                    b.Property<int?>("WebDiscontinued")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "WebDiscontinued");

                    b.Property<string>("WebManufacturerPartNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "WebManufacturerPartNumber");

                    b.Property<decimal>("Weight")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)")
                        .HasAnnotation("Relational:JsonPropertyName", "Weight");

                    b.Property<string>("WorkingTime")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "WorkingTime");

                    b.Property<string>("YieldItem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "YieldItem");

                    b.Property<string>("ZoroBrand")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ZoroBrand");

                    b.Property<string>("ZoroCaliforniaProp65WarningIcon")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ZoroCaliforniaProp65WarningIcon");

                    b.Property<string>("ZoroCountryOfOrigin")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ZoroCountryOfOrigin");

                    b.Property<string>("ZoroOrderLeadTime")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ZoroOrderLeadTime");

                    b.Property<string>("ZoroUnknownCountryOfOrigin")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ZoroUnknownCountryOfOrigin");

                    b.HasKey("PdmarticleID");

                    b.ToTable("PIM_Products");
                });

            modelBuilder.Entity("DataBridge.Models.Contentserv.ProductHierarchy", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ID");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Label");

                    b.HasKey("ID");

                    b.ToTable("PIM_Hierarchy");
                });

            modelBuilder.Entity("DataBridge.Models.Delivra.Clickthrough", b =>
                {
                    b.Property<int?>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PkId"));

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "EmailAddress");

                    b.Property<DateTime?>("EventTime")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "EventTime");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "IPAddress");

                    b.Property<int?>("MailingID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "MailingID");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "MemberID");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Name");

                    b.Property<string>("URI")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "URI");

                    b.HasKey("PkId");

                    b.ToTable("DelivraClickthroughs");
                });

            modelBuilder.Entity("DataBridge.Models.Delivra.MailingApproval", b =>
                {
                    b.Property<int?>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PkId"));

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Body");

                    b.Property<bool?>("FacebookPost")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "FacebookPost");

                    b.Property<string>("FileUID")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "FileUID");

                    b.Property<int?>("Footer")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "Footer");

                    b.Property<string>("HeaderAll")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "HeaderAll");

                    b.Property<string>("HeaderDate")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "HeaderDate");

                    b.Property<string>("HeaderFrom")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "HeaderFrom");

                    b.Property<string>("HeaderFromSpc")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "HeaderFromSpc");

                    b.Property<string>("HeaderSubject")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "HeaderSubject");

                    b.Property<string>("HeaderTo")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "HeaderTo");

                    b.Property<bool?>("LinkedInPost")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "LinkedInPost");

                    b.Property<string>("List")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "List");

                    b.Property<int?>("MaxRecips")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "MaxRecips");

                    b.Property<int?>("MessageID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "MessageID");

                    b.Property<bool?>("PublishOnSend")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "PublishOnSend");

                    b.Property<int?>("ReSubmit")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ReSubmit");

                    b.Property<bool?>("SendFrequencyOverride")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "SendFrequencyOverride");

                    b.Property<bool?>("SendTimeOptimize")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "SendTimeOptimize");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Status");

                    b.Property<int?>("SubsetID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SubsetID");

                    b.Property<bool?>("TimeZoneSend")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "TimeZoneSend");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Title");

                    b.Property<string>("Transact")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Transact");

                    b.Property<bool?>("TwitterTweet")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "TwitterTweet");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Type");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "UpdatedDate");

                    b.HasKey("PkId");

                    b.ToTable("DelivraMailingApprovals");
                });

            modelBuilder.Entity("DataBridge.Models.Delivra.Open", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<string>("Browser")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Browser");

                    b.Property<string>("BrowserVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "BrowserVersion");

                    b.Property<double?>("ContactEngagement")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "ContactEngagement");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "EmailAddress");

                    b.Property<DateTime?>("EventTime")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "EventTime");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "IPAddress");

                    b.Property<int?>("MailingID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "MailingID");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "MemberID");

                    b.Property<string>("Platform")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Platform");

                    b.Property<string>("PlatformVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "PlatformVersion");

                    b.Property<string>("ReadingEnvironment")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ReadingEnvironment");

                    b.HasKey("PkId");

                    b.ToTable("DelivraOpens");
                });

            modelBuilder.Entity("DataBridge.Models.Delivra.Report", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<int?>("Aborts")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "aborts");

                    b.Property<int?>("Active")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "active");

                    b.Property<int?>("Attempted")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "attempted");

                    b.Property<int?>("BadDoms")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "bad_doms");

                    b.Property<int?>("Bounces")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "bounces");

                    b.Property<int?>("Complaints")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "complaints");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "completed");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "Created");

                    b.Property<int?>("DesktopOpens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "DesktopOpens");

                    b.Property<int?>("DnsTemps")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "dns_temps");

                    b.Property<decimal?>("Engagement")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "engagement");

                    b.Property<int?>("Expirations")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "expirations");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "finish_date");

                    b.Property<int?>("Forwards")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "forwards");

                    b.Property<int?>("HardFails")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "hard_fails");

                    b.Property<int?>("InmailBodySize")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "InmailBodySize");

                    b.Property<string>("InmailHdrFrom")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "InmailHdrFrom");

                    b.Property<int?>("Invalids")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "invalids");

                    b.Property<bool?>("IsTriggered")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "IsTriggered");

                    b.Property<string>("List")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "List");

                    b.Property<int?>("Mailed")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "mailed");

                    b.Property<int?>("MesMissings")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "mes_missings");

                    b.Property<int?>("MobileOpens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "MobileOpens");

                    b.Property<int?>("ModerateId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ModerateID");

                    b.Property<int?>("Opens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "opens");

                    b.Property<string>("OutmailFrom")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "OutmailFrom");

                    b.Property<string>("OutmailTo")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "OutmailTo");

                    b.Property<int?>("Paused")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "paused");

                    b.Property<int?>("PermFails")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "perm_fails");

                    b.Property<int?>("Received")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "received");

                    b.Property<int?>("Referrals")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "referrals");

                    b.Property<int?>("Skips")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "skips");

                    b.Property<int?>("SocialImpressions")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "social_impressions");

                    b.Property<int?>("SocialShares")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "social_shares");

                    b.Property<int?>("SoftFails")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "soft_fails");

                    b.Property<int?>("Streams")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "streams");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Subject");

                    b.Property<int?>("SubsetID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SubsetID");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Title");

                    b.Property<int?>("TotalClicks")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "total_clicks");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "trans");

                    b.Property<decimal?>("TransAmt")
                        .HasColumnType("decimal(18,2)")
                        .HasAnnotation("Relational:JsonPropertyName", "trans_amt");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Type");

                    b.Property<int?>("UniqueClicks")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "unique_clicks");

                    b.Property<int?>("UniqueDesktopOpens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "UniqueDesktopOpens");

                    b.Property<int?>("UniqueMobileOpens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "UniqueMobileOpens");

                    b.Property<int?>("UniqueOpens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "unique_opens");

                    b.Property<int?>("UniqueStreams")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "unique_streams");

                    b.Property<int?>("UniqueTrans")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "unique_trans");

                    b.Property<int?>("UniqueUnknownOpens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "UniqueUnknownOpens");

                    b.Property<int?>("UniqueWebOpens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "UniqueWebOpens");

                    b.Property<int?>("Units")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "units");

                    b.Property<int?>("UnknownOpens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "UnknownOpens");

                    b.Property<int?>("Unsubs")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "unsubs");

                    b.Property<int?>("WebOpens")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "WebOpens");

                    b.HasKey("Id");

                    b.ToTable("DelivraReports");
                });

            modelBuilder.Entity("DataBridge.Models.Delivra.Segment", b =>
                {
                    b.Property<int?>("SegmentID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "SegmentID");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "Created");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Description");

                    b.Property<int?>("DirectoryID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "DirectoryID");

                    b.Property<DateTime>("LastUsed")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "LastUsed");

                    b.Property<int?>("LastUsedRecipientCount")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "LastUsedRecipientCount");

                    b.Property<string>("List")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "List");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "Modified");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Name");

                    b.Property<string>("SegmentType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "SegmentType");

                    b.HasKey("SegmentID");

                    b.ToTable("DelivraSegments");
                });

            modelBuilder.Entity("DataBridge.Models.Delivra.Send", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "EmailAddress");

                    b.Property<DateTime?>("EventTime")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "EventTime");

                    b.Property<int?>("MailingID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "MailingID");

                    b.Property<int?>("MemberID")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "MemberID");

                    b.HasKey("PkId");

                    b.ToTable("DelivraSends");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.Campaign", b =>
                {
                    b.Property<string>("CampaignId")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "campaignId");

                    b.Property<bool?>("BehaviorSystemDefault")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "behaviorSystemDefault");

                    b.Property<string>("CampaignEngagementId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "campaignEngagementId");

                    b.Property<string>("CampaignEngagementName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "campaignEngagementName");

                    b.Property<string>("CampaignName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "campaignName");

                    b.Property<string>("EngagementSource")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "engagementSource");

                    b.Property<string>("GoalId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "goalId");

                    b.Property<string>("GoalName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "goalName");

                    b.Property<long?>("LobId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "lobId");

                    b.Property<string>("LobName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "lobName");

                    b.Property<string>("LocationId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "locationId");

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "locationName");

                    b.Property<bool?>("ProfileSystemDefault")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "profileSystemDefault");

                    b.Property<string>("VisitorBehaviorId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "visitorBehaviorId");

                    b.Property<string>("VisitorBehaviorName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "visitorBehaviorName");

                    b.Property<string>("VisitorProfileId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "visitorProfileId");

                    b.Property<string>("VisitorProfileName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "visitorProfileName");

                    b.HasKey("CampaignId");

                    b.ToTable("LP_Campaigns");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.ConsumerParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarURL")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "avatarURL");

                    b.Property<string>("ConsumerName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "consumerName");

                    b.Property<Guid?>("ConversationId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "conversationId");

                    b.Property<string>("DialogId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dialogId");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "firstName");

                    b.Property<string>("JoinTime")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "joinTime");

                    b.Property<long?>("JoinTimeL")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "joinTimeL");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "lastName");

                    b.Property<string>("ParticipantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "participantId");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "phone");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "time");

                    b.Property<long?>("TimeL")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "timeL");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "token");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("LP_ConsumerParticipants");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.ConversationInfo", b =>
                {
                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "conversationId");

                    b.Property<bool?>("AgentDeleted")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "agentDeleted");

                    b.Property<int?>("AlertedMCS")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "alertedMCS");

                    b.Property<string>("AppId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "appId");

                    b.Property<string>("BrandId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "brandId");

                    b.Property<string>("Browser")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "browser");

                    b.Property<string>("BrowserVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "browserVersion");

                    b.Property<string>("CampaignId")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "campaignId");

                    b.Property<string>("CloseReason")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "closeReason");

                    b.Property<string>("CloseReasonDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "closeReasonDescription");

                    b.Property<string>("ConversationEndTime")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "conversationEndTime");

                    b.Property<long?>("ConversationEndTimeL")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "conversationEndTimeL");

                    b.Property<string>("Device")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "device");

                    b.Property<long?>("Duration")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "duration");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "endTime");

                    b.Property<long?>("EndTimeL")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "endTimeL");

                    b.Property<string>("Features")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "features");

                    b.Property<bool?>("FirstConversation")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "firstConversation");

                    b.Property<string>("FullDialogStatus")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "fullDialogStatus");

                    b.Property<string>("Integration")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "integration");

                    b.Property<string>("IntegrationVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "integrationVersion");

                    b.Property<string>("InteractionContextId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "interactionContextId");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "ipAddress");

                    b.Property<bool?>("IsPartial")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isPartial");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "language");

                    b.Property<string>("LatestAgentFullName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "latestAgentFullName");

                    b.Property<long?>("LatestAgentGroupId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "latestAgentGroupId");

                    b.Property<string>("LatestAgentGroupName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "latestAgentGroupName");

                    b.Property<string>("LatestAgentId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "latestAgentId");

                    b.Property<string>("LatestAgentLoginName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "latestAgentLoginName");

                    b.Property<string>("LatestAgentNickname")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "latestAgentNickname");

                    b.Property<string>("LatestHandlerAccountId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "latestHandlerAccountId");

                    b.Property<long?>("LatestHandlerSkillId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "latestHandlerSkillId");

                    b.Property<string>("LatestQueueState")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "latestQueueState");

                    b.Property<long?>("LatestSkillId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "latestSkillId");

                    b.Property<string>("LatestSkillName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "latestSkillName");

                    b.Property<int?>("Mcs")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "mcs");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "operatingSystem");

                    b.Property<string>("OperatingSystemVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "operatingSystemVersion");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sessionId");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "source");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "startTime");

                    b.Property<long?>("StartTimeL")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "startTimeL");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "status");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "timeZone");

                    b.Property<string>("VisitorId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "visitorId");

                    b.HasKey("ConversationId");

                    b.HasIndex("CampaignId");

                    b.ToTable("LP_ConversationInfo");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.ConversationSurveyData", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "answer");

                    b.Property<string>("AnswerId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "answerId");

                    b.Property<int?>("AnswerScore")
                        .HasColumnType("int");

                    b.Property<string>("AnswerSeq")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "answerSeq");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "conversationId");

                    b.Property<bool>("IsValidAnswer")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isValidAnswer");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "question");

                    b.Property<string>("QuestionFormat")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "questionFormat");

                    b.Property<string>("QuestionId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "questionId");

                    b.Property<string>("QuestionName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "questionName");

                    b.Property<string>("QuestionType")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "questionType");

                    b.HasKey("PkId");

                    b.HasIndex("ConversationId");

                    b.ToTable("LP_ConversationSurveyData");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.Interaction", b =>
                {
                    b.Property<string>("DialogId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0)
                        .HasAnnotation("Relational:JsonPropertyName", "dialogId");

                    b.Property<int?>("InteractiveSequence")
                        .HasColumnType("int")
                        .HasColumnOrder(1)
                        .HasAnnotation("Relational:JsonPropertyName", "interactiveSequence");

                    b.Property<string>("AssignedAgentFullName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "assignedAgentFullName");

                    b.Property<string>("AssignedAgentId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "assignedAgentId");

                    b.Property<string>("AssignedAgentLoginName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "assignedAgentLoginName");

                    b.Property<string>("AssignedAgentNickname")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "assignedAgentNickname");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "conversationId");

                    b.Property<string>("InteractionTime")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "interactionTime");

                    b.Property<long?>("InteractionTimeL")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "interactionTimeL");

                    b.HasKey("DialogId", "InteractiveSequence");

                    b.HasIndex("ConversationId");

                    b.ToTable("LP_Interaction");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.MessageRecord", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "messageId");

                    b.Property<string>("Audience")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "audience");

                    b.Property<Guid?>("ConversationId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "conversationId");

                    b.Property<string>("Device")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "device");

                    b.Property<string>("DialogId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dialogId");

                    b.Property<string>("IntegrationSource")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "integrationSource");

                    b.Property<int?>("Mcs")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "mcs");

                    b.Property<int?>("MessageRawScore")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "messageRawScore");

                    b.Property<string>("MessageStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageText")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "messageText");

                    b.Property<string>("ParticipantId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "participantId");

                    b.Property<bool?>("PredefinedContent")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "predefinedContent");

                    b.Property<string>("PredefinedContentCategoryId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "predefinedContentCategoryId");

                    b.Property<bool?>("PredefinedContentEdited")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "predefinedContentEdited");

                    b.Property<string>("PredefinedContentId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "predefinedContentId");

                    b.Property<string>("PredefinedContentLanguage")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "predefinedContentLanguage");

                    b.Property<string>("SentBy")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sentBy");

                    b.Property<int?>("Seq")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "seq");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "source");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "time");

                    b.Property<long?>("TimeL")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "timeL");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "type");

                    b.HasKey("MessageId");

                    b.HasIndex("ConversationId");

                    b.ToTable("LP_MessageRecords");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.SummaryData", b =>
                {
                    b.Property<int>("PkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PkId"));

                    b.Property<string>("AgentId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "agentId");

                    b.Property<Guid?>("ConversationId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "conversationId");

                    b.Property<bool?>("IsAutoSummary")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "isAutoSummary");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("NoteContent")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "noteContent");

                    b.Property<string>("NoteId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "noteId");

                    b.Property<long?>("Time")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "time");

                    b.HasKey("PkId");

                    b.HasIndex("ConversationId");

                    b.ToTable("LP_SummaryData");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedAgentId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "assignedAgentId");

                    b.Property<string>("By")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "by");

                    b.Property<Guid?>("ConversationId")
                        .HasColumnType("uniqueidentifier")
                        .HasAnnotation("Relational:JsonPropertyName", "conversationId");

                    b.Property<string>("DialogId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "dialogId");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "reason");

                    b.Property<string>("SourceAgentFullName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sourceAgentFullName");

                    b.Property<string>("SourceAgentId")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sourceAgentId");

                    b.Property<string>("SourceAgentLoginName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sourceAgentLoginName");

                    b.Property<string>("SourceAgentNickname")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sourceAgentNickname");

                    b.Property<long?>("SourceSkillId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "sourceSkillId");

                    b.Property<string>("SourceSkillName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "sourceSkillName");

                    b.Property<long?>("TargetSkillId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "targetSkillId");

                    b.Property<string>("TargetSkillName")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "targetSkillName");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "time");

                    b.Property<long?>("TimeL")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "timeL");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("LP_Transfers");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.ConsumerParticipant", b =>
                {
                    b.HasOne("DataBridge.Models.Liveperson.ConversationInfo", "ConversationInfo")
                        .WithMany()
                        .HasForeignKey("ConversationId");

                    b.Navigation("ConversationInfo");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.ConversationInfo", b =>
                {
                    b.HasOne("DataBridge.Models.Liveperson.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId");

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.ConversationSurveyData", b =>
                {
                    b.HasOne("DataBridge.Models.Liveperson.ConversationInfo", "ConversationInfo")
                        .WithMany()
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConversationInfo");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.Interaction", b =>
                {
                    b.HasOne("DataBridge.Models.Liveperson.ConversationInfo", "ConversationInfo")
                        .WithMany()
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConversationInfo");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.MessageRecord", b =>
                {
                    b.HasOne("DataBridge.Models.Liveperson.ConversationInfo", "ConversationInfo")
                        .WithMany()
                        .HasForeignKey("ConversationId");

                    b.Navigation("ConversationInfo");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.SummaryData", b =>
                {
                    b.HasOne("DataBridge.Models.Liveperson.ConversationInfo", "ConversationInfo")
                        .WithMany()
                        .HasForeignKey("ConversationId");

                    b.Navigation("ConversationInfo");
                });

            modelBuilder.Entity("DataBridge.Models.Liveperson.Transfer", b =>
                {
                    b.HasOne("DataBridge.Models.Liveperson.ConversationInfo", "ConversationInfo")
                        .WithMany()
                        .HasForeignKey("ConversationId");

                    b.Navigation("ConversationInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
